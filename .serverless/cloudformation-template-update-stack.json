{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "GenerateHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/notion-service-dev-generateHandler"
      }
    },
    "UrlHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/notion-service-dev-urlHandler"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "notion-service",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notion-service-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notion-service-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "notion-service",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GenerateHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
          "S3Key": "serverless/notion-service/dev/1735387439203-2024-12-28T12:03:59.203Z/notion-service.zip"
        },
        "Handler": "generateHandler.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "notion-service-dev-generateHandler",
        "MemorySize": 1024,
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "NOTION_API_KEY": "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",
            "NOTION_WORD_LIST_DATABASE_ID": "150c3752e48a803e8593c48e9593332e",
            "NOTION_ATTEMPTS_DATABASE_ID": "150c3752e48a80768126d6eac82027f7",
            "NOTION_TODAY_ATTEMPT_SHORTCUT": "167c3752e48a80978616d2f9791a1a58",
            "TELEGRAM_URL": "https://api.telegram.org/bot7014099402:AAG15B_W2pW6k2gFRWZ_BJHSSdgJMpsSfRg/sendMessage?chat_id=-1002322494245&text={{message}}&message_thread_id=6",
            "NODE_ENV": "production"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GenerateHandlerLogGroup"
      ]
    },
    "UrlHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
          "S3Key": "serverless/notion-service/dev/1735387439203-2024-12-28T12:03:59.203Z/notion-service.zip"
        },
        "Handler": "urlHandler.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "notion-service-dev-urlHandler",
        "MemorySize": 1024,
        "Timeout": 60,
        "Environment": {
          "Variables": {
            "NOTION_API_KEY": "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",
            "NOTION_WORD_LIST_DATABASE_ID": "150c3752e48a803e8593c48e9593332e",
            "NOTION_ATTEMPTS_DATABASE_ID": "150c3752e48a80768126d6eac82027f7",
            "NOTION_TODAY_ATTEMPT_SHORTCUT": "167c3752e48a80978616d2f9791a1a58",
            "TELEGRAM_URL": "https://api.telegram.org/bot7014099402:AAG15B_W2pW6k2gFRWZ_BJHSSdgJMpsSfRg/sendMessage?chat_id=-1002322494245&text={{message}}&message_thread_id=6",
            "NODE_ENV": "production"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UrlHandlerLogGroup"
      ]
    },
    "GenerateHandlerLambdaVersionboBdotRoqEi7pfP7RfxoGFHiIp0JQOyAEjj660ClQoM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GenerateHandlerLambdaFunction"
        },
        "CodeSha256": "+RUt3yrf/yvLStvKy8MnjyQPFN8aX1UR0vnEbprw1Pg="
      }
    },
    "UrlHandlerLambdaVersionSKvPXjLrHc9JCFfArQQKngfBlH8siaT9nP2wP45Nc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UrlHandlerLambdaFunction"
        },
        "CodeSha256": "+RUt3yrf/yvLStvKy8MnjyQPFN8aX1UR0vnEbprw1Pg="
      }
    },
    "UrlHandlerLambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "AWS_IAM",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "UrlHandlerLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "GenerateHandlerEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 1 * * ? *)",
        "State": "ENABLED",
        "Description": "Trigger generate today attempt",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "GenerateHandlerLambdaFunction",
                "Arn"
              ]
            },
            "Id": "generateHandlerSchedule"
          }
        ]
      }
    },
    "GenerateHandlerLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GenerateHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "GenerateHandlerEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
      "Export": {
        "Name": "sls-notion-service-dev-ServerlessDeploymentBucketName"
      }
    },
    "GenerateHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GenerateHandlerLambdaVersionboBdotRoqEi7pfP7RfxoGFHiIp0JQOyAEjj660ClQoM"
      },
      "Export": {
        "Name": "sls-notion-service-dev-GenerateHandlerLambdaFunctionQualifiedArn"
      }
    },
    "UrlHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UrlHandlerLambdaVersionSKvPXjLrHc9JCFfArQQKngfBlH8siaT9nP2wP45Nc"
      },
      "Export": {
        "Name": "sls-notion-service-dev-UrlHandlerLambdaFunctionQualifiedArn"
      }
    },
    "UrlHandlerLambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "UrlHandlerLambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-notion-service-dev-UrlHandlerLambdaFunctionUrl"
      }
    }
  }
}