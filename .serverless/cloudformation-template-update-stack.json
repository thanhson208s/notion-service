{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "GenerateHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/notion-service-dev-generateHandler"
      }
    },
    "ReviewHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/notion-service-dev-reviewHandler"
      }
    },
    "UrlHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/notion-service-dev-urlHandler"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "notion-service",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notion-service-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notion-service-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "notion-service",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GenerateHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
          "S3Key": "serverless/notion-service/dev/1734492536979-2024-12-18T03:28:56.979Z/notion-service.zip"
        },
        "Handler": "generateHandler.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "notion-service-dev-generateHandler",
        "MemorySize": 1024,
        "Timeout": 900,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GenerateHandlerLogGroup"
      ]
    },
    "ReviewHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
          "S3Key": "serverless/notion-service/dev/1734492536979-2024-12-18T03:28:56.979Z/notion-service.zip"
        },
        "Handler": "reviewHandler.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "notion-service-dev-reviewHandler",
        "MemorySize": 1024,
        "Timeout": 900,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ReviewHandlerLogGroup"
      ]
    },
    "UrlHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
          "S3Key": "serverless/notion-service/dev/1734492536979-2024-12-18T03:28:56.979Z/notion-service.zip"
        },
        "Handler": "urlHandler.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "notion-service-dev-urlHandler",
        "MemorySize": 1024,
        "Timeout": 60,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UrlHandlerLogGroup"
      ]
    },
    "GenerateHandlerLambdaVersionb49mbW3AtUiPyjBFz0q5mR3AxzxAJ8v1tlLRiwKw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GenerateHandlerLambdaFunction"
        },
        "CodeSha256": "Xkr70CTMYmU7kU03oHklZhbl8euEVu9FsGLTX/kY3/8="
      }
    },
    "ReviewHandlerLambdaVersionHN4I6NW1iIeTAbZTnIPWshuCnFmaDTt59k7NgZw5F4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ReviewHandlerLambdaFunction"
        },
        "CodeSha256": "Xkr70CTMYmU7kU03oHklZhbl8euEVu9FsGLTX/kY3/8="
      }
    },
    "UrlHandlerLambdaVersionS8IEnh9kzSci3LRe3uUFpTeoaev5Va7pRbzezKZ2kCA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UrlHandlerLambdaFunction"
        },
        "CodeSha256": "Xkr70CTMYmU7kU03oHklZhbl8euEVu9FsGLTX/kY3/8="
      }
    },
    "UrlHandlerLambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "UrlHandlerLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "UrlHandlerLambdaPermissionFnUrl": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UrlHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunctionUrl",
        "Principal": "*",
        "FunctionUrlAuthType": "NONE"
      }
    },
    "GenerateHandlerEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 1 * * ? *)",
        "State": "ENABLED",
        "Description": "Trigger generate today attempt",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "GenerateHandlerLambdaFunction",
                "Arn"
              ]
            },
            "Id": "generateHandlerSchedule"
          }
        ]
      }
    },
    "GenerateHandlerLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GenerateHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "GenerateHandlerEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "ReviewHandlerEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 17 * * ? *)",
        "State": "ENABLED",
        "Description": "Trigger review today attempt",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ReviewHandlerLambdaFunction",
                "Arn"
              ]
            },
            "Id": "reviewHandlerSchedule"
          }
        ]
      }
    },
    "ReviewHandlerLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ReviewHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ReviewHandlerEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
      "Export": {
        "Name": "sls-notion-service-dev-ServerlessDeploymentBucketName"
      }
    },
    "GenerateHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GenerateHandlerLambdaVersionb49mbW3AtUiPyjBFz0q5mR3AxzxAJ8v1tlLRiwKw"
      },
      "Export": {
        "Name": "sls-notion-service-dev-GenerateHandlerLambdaFunctionQualifiedArn"
      }
    },
    "ReviewHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ReviewHandlerLambdaVersionHN4I6NW1iIeTAbZTnIPWshuCnFmaDTt59k7NgZw5F4"
      },
      "Export": {
        "Name": "sls-notion-service-dev-ReviewHandlerLambdaFunctionQualifiedArn"
      }
    },
    "UrlHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UrlHandlerLambdaVersionS8IEnh9kzSci3LRe3uUFpTeoaev5Va7pRbzezKZ2kCA"
      },
      "Export": {
        "Name": "sls-notion-service-dev-UrlHandlerLambdaFunctionQualifiedArn"
      }
    },
    "UrlHandlerLambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "UrlHandlerLambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-notion-service-dev-UrlHandlerLambdaFunctionUrl"
      }
    }
  }
}