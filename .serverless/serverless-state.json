{
  "service": {
    "service": "notion-service",
    "serviceObject": {
      "name": "notion-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "ap-southeast-1",
      "environment": {
        "NOTION_API_KEY": "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",
        "NOTION_WORD_LIST_DATABASE_ID": "150c3752e48a803e8593c48e9593332e",
        "NOTION_ATTEMPTS_DATABASE_ID": "150c3752e48a80768126d6eac82027f7",
        "TELEGRAM_URL": "https://api.telegram.org/bot7014099402:AAG15B_W2pW6k2gFRWZ_BJHSSdgJMpsSfRg/sendMessage?chat_id=-1002322494245&text={{message}}&message_thread_id=6",
        "NODE_ENV": "production"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GenerateHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notion-service-dev-generateHandler"
            }
          },
          "ReviewHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notion-service-dev-reviewHandler"
            }
          },
          "UrlHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notion-service-dev-urlHandler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "notion-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notion-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notion-service-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "notion-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GenerateHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
                "S3Key": "serverless/notion-service/dev/1735037734539-2024-12-24T10:55:34.539Z/notion-service.zip"
              },
              "Handler": "generateHandler.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "notion-service-dev-generateHandler",
              "MemorySize": 1024,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "NOTION_API_KEY": "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",
                  "NOTION_WORD_LIST_DATABASE_ID": "150c3752e48a803e8593c48e9593332e",
                  "NOTION_ATTEMPTS_DATABASE_ID": "150c3752e48a80768126d6eac82027f7",
                  "TELEGRAM_URL": "https://api.telegram.org/bot7014099402:AAG15B_W2pW6k2gFRWZ_BJHSSdgJMpsSfRg/sendMessage?chat_id=-1002322494245&text={{message}}&message_thread_id=6",
                  "NODE_ENV": "production"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GenerateHandlerLogGroup"
            ]
          },
          "ReviewHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
                "S3Key": "serverless/notion-service/dev/1735037734539-2024-12-24T10:55:34.539Z/notion-service.zip"
              },
              "Handler": "reviewHandler.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "notion-service-dev-reviewHandler",
              "MemorySize": 1024,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "NOTION_API_KEY": "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",
                  "NOTION_WORD_LIST_DATABASE_ID": "150c3752e48a803e8593c48e9593332e",
                  "NOTION_ATTEMPTS_DATABASE_ID": "150c3752e48a80768126d6eac82027f7",
                  "TELEGRAM_URL": "https://api.telegram.org/bot7014099402:AAG15B_W2pW6k2gFRWZ_BJHSSdgJMpsSfRg/sendMessage?chat_id=-1002322494245&text={{message}}&message_thread_id=6",
                  "NODE_ENV": "production"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ReviewHandlerLogGroup"
            ]
          },
          "UrlHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
                "S3Key": "serverless/notion-service/dev/1735037734539-2024-12-24T10:55:34.539Z/notion-service.zip"
              },
              "Handler": "urlHandler.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "notion-service-dev-urlHandler",
              "MemorySize": 1024,
              "Timeout": 60,
              "Environment": {
                "Variables": {
                  "NOTION_API_KEY": "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",
                  "NOTION_WORD_LIST_DATABASE_ID": "150c3752e48a803e8593c48e9593332e",
                  "NOTION_ATTEMPTS_DATABASE_ID": "150c3752e48a80768126d6eac82027f7",
                  "TELEGRAM_URL": "https://api.telegram.org/bot7014099402:AAG15B_W2pW6k2gFRWZ_BJHSSdgJMpsSfRg/sendMessage?chat_id=-1002322494245&text={{message}}&message_thread_id=6",
                  "NODE_ENV": "production"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UrlHandlerLogGroup"
            ]
          },
          "GenerateHandlerLambdaVersion4oB7GMQyMnVhjqfTrdy1faUuQP3E5nrljGbgNuSCfA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GenerateHandlerLambdaFunction"
              },
              "CodeSha256": "Zi/GpHhdNQJD0y3snKqFqDureUQwijsy5uvkbPpq3Z0="
            }
          },
          "ReviewHandlerLambdaVersionXf9DgbBhAq78LyyXzfMlQ6MFZoLb9ONhmVe8TE6jA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ReviewHandlerLambdaFunction"
              },
              "CodeSha256": "Zi/GpHhdNQJD0y3snKqFqDureUQwijsy5uvkbPpq3Z0="
            }
          },
          "UrlHandlerLambdaVersionU0pIv5dL7Um5hlDpCyt9H0QsD5XD0rqfvxEKY0e45A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UrlHandlerLambdaFunction"
              },
              "CodeSha256": "Zi/GpHhdNQJD0y3snKqFqDureUQwijsy5uvkbPpq3Z0="
            }
          },
          "UrlHandlerLambdaFunctionUrl": {
            "Type": "AWS::Lambda::Url",
            "Properties": {
              "AuthType": "AWS_IAM",
              "TargetFunctionArn": {
                "Fn::GetAtt": [
                  "UrlHandlerLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "GenerateHandlerEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 1 * * ? *)",
              "State": "ENABLED",
              "Description": "Trigger generate today attempt",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "GenerateHandlerLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "generateHandlerSchedule"
                }
              ]
            }
          },
          "GenerateHandlerLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GenerateHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "GenerateHandlerEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "ReviewHandlerEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 17 * * ? *)",
              "State": "ENABLED",
              "Description": "Trigger review today attempt",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "ReviewHandlerLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "reviewHandlerSchedule"
                }
              ]
            }
          },
          "ReviewHandlerLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ReviewHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "ReviewHandlerEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
            "Export": {
              "Name": "sls-notion-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "GenerateHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GenerateHandlerLambdaVersion4oB7GMQyMnVhjqfTrdy1faUuQP3E5nrljGbgNuSCfA"
            },
            "Export": {
              "Name": "sls-notion-service-dev-GenerateHandlerLambdaFunctionQualifiedArn"
            }
          },
          "ReviewHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ReviewHandlerLambdaVersionXf9DgbBhAq78LyyXzfMlQ6MFZoLb9ONhmVe8TE6jA"
            },
            "Export": {
              "Name": "sls-notion-service-dev-ReviewHandlerLambdaFunctionQualifiedArn"
            }
          },
          "UrlHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UrlHandlerLambdaVersionU0pIv5dL7Um5hlDpCyt9H0QsD5XD0rqfvxEKY0e45A"
            },
            "Export": {
              "Name": "sls-notion-service-dev-UrlHandlerLambdaFunctionQualifiedArn"
            }
          },
          "UrlHandlerLambdaFunctionUrl": {
            "Description": "Lambda Function URL",
            "Value": {
              "Fn::GetAtt": [
                "UrlHandlerLambdaFunctionUrl",
                "FunctionUrl"
              ]
            },
            "Export": {
              "Name": "sls-notion-service-dev-UrlHandlerLambdaFunctionUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "generateHandler": {
        "handler": "generateHandler.handler",
        "events": [
          {
            "schedule": {
              "rate": [
                "cron(0 1 * * ? *)"
              ],
              "description": "Trigger generate today attempt"
            }
          }
        ],
        "timeout": 900,
        "name": "notion-service-dev-generateHandler",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "GenerateHandlerLambdaVersion4oB7GMQyMnVhjqfTrdy1faUuQP3E5nrljGbgNuSCfA"
      },
      "reviewHandler": {
        "handler": "reviewHandler.handler",
        "events": [
          {
            "schedule": {
              "rate": [
                "cron(0 17 * * ? *)"
              ],
              "description": "Trigger review today attempt"
            }
          }
        ],
        "timeout": 900,
        "name": "notion-service-dev-reviewHandler",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ReviewHandlerLambdaVersionXf9DgbBhAq78LyyXzfMlQ6MFZoLb9ONhmVe8TE6jA"
      },
      "urlHandler": {
        "handler": "urlHandler.handler",
        "url": {
          "authorizer": "aws_iam"
        },
        "timeout": 60,
        "events": [],
        "name": "notion-service-dev-urlHandler",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "UrlHandlerLambdaVersionU0pIv5dL7Um5hlDpCyt9H0QsD5XD0rqfvxEKY0e45A"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "org": "gootube",
      "app": "gootube",
      "service": "notion-service",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "patterns": [
          "!.env",
          "!README.md"
        ],
        "artifactsS3KeyDirname": "serverless/notion-service/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-ap-southeast-1-37a7e067-2a85",
        "artifact": "D:\\repos\\notion-service\\.serverless\\notion-service.zip",
        "artifactDirectoryName": "serverless/notion-service/dev/1735037734539-2024-12-24T10:55:34.539Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "app": "gootube",
    "appId": null,
    "org": "gootube",
    "orgId": null,
    "layers": {},
    "artifact": "D:\\repos\\notion-service\\.serverless\\notion-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/notion-service/dev/1735037734539-2024-12-24T10:55:34.539Z",
    "artifact": "notion-service.zip"
  }
}